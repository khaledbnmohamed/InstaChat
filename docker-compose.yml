version: '3.7'

volumes:
  development-database-data-volume:
  test-database-data-volume:
  elastic_search:
  rails_cache:
  bundle:
  node_modules:
  packs:

services:
  instachat: &instachat
    container_name: instachat
    hostname: instachat
    image: instachat
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_USER_ID: ${APP_USER_ID}
    ports:
      - 3000:3000
    tty: true
    stdin_open: true
    # depends_on:
    #   - instachat_development_database
    #   - instachat_test_database
    volumes:
      - .:/home/instachat/instachat:cached
      - ~/.ssh:/home/instachat/.ssh
      - rails_cache:/home/instachat/instachat/tmp/cache
      - bundle:/bundle
      - node_modules:/home/instachat/instachat/node_modules
      - packs:/home/instachat/instachat/public/packs
    tmpfs:
      - /tmp
    env_file: .env
    command: sh sleeper.sh elastic_search:9200
    links:
      - elastic_search
      - instachat_redis
    environment:
      - ES_HOST=elastic_search
    entrypoint: ["/home/instachat/docker-entrypoint.sh"]
    command: ["bundle", "exec", "rake" , "db:create"]
    command: ["bundle", "exec", "rake" , "db:migrate"]
    command: ["bundle", "exec", "rake" , "elasticsearch:build_index"]
    command: ["bundle", "exec", "rails","server","-b","0.0.0.0","-p","3000"]

  go-app:
    image: golang:1.16.2
    container_name: go_app
    tty: true
    stdin_open: true
    build:
      context: ./go_app
      dockerfile: Dockerfile
    env_file: .env
    links:
      - elastic_search
      - instachat_redis
      - instachat
    depends_on:
      - elastic_search
      - instachat_redis
      - instachat

  elastic_search:
    image: elasticsearch:5.4.0-alpine
    restart: always
    ports:
      - "9200:9200"
    expose:
      - "9200"
    volumes:
      - ./volumes/es:/usr/share/elasticsearch/data
    depends_on:
      - instachat_redis


  # instachat_worker:
  #   <<: *instachat
  #   command: bundle exec rake environment resque:work QUEUE=*
  #   container_name: instachat_worker
  #   hostname: instachat_worker
  #   ports: []
  #   entrypoint: ""
  #   depends_on:
  #     - instachat_development_database
  #     - instachat_test_database
  #     - instachat_redis
  #     - instachat

  instachat_development_database: &database
    image:  mysql:5.7.33
    environment:
      MYSQL_ROOT_PASSWORD: instachat
      MYSQL_DATABASE: instachat_development
      MYSQL_USER: instachat
      MYSQL_PASSWORD: instachat
    container_name: instachat_database_development
    restart: always
    volumes:
      - development-database-data-volume:/var/lib/mysql
    ports:
      - '3306:3306'
    expose:
      - '3306'

  instachat_test_database:
    <<: *database
    environment:
      MYSQL_ROOT_PASSWORD: instachat
      MYSQL_DATABASE: instachat_test
      MYSQL_USER: instachat
      MYSQL_PASSWORD: instachat
    container_name: instachat_database_test
    volumes:
      - test-database-data-volume:/var/lib/mysql
    ports:
      - '3307:3307'
    expose:
      - '3307'

  instachat_redis:
    container_name: instachat_redis
    image: redis
    restart: always
    ports:
     - '6379:6379'
    expose:
      - '6379'
